{"version":3,"sources":["App.tsx","Header.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","alt","src","queryClient","QueryClient","GetGithubUser","useQuery","fetch","then","res","json","isLoading","error","data","console","log","Typography","variant","name","bio","Header","QueryClientProvider","client","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Container","maxWidth","Grid","container","spacing","item","xs","document","getElementById"],"mappings":"mPAiBeA,MAbf,WAGE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,yBAEE,qBAAKC,IAAI,GAAGD,UAAU,YAAYE,IAAI,yD,wECNxCC,EAAc,IAAIC,IAExB,SAASC,IAAiB,IAAD,EACcC,YAAS,YAAY,kBACpDC,MAAM,yCAAyCC,MAAK,SAAAC,GAAG,OACnDA,EAAIC,aAFJC,EADa,EACbA,UAAWC,EADE,EACFA,MAAOC,EADL,EACKA,KAM1B,OAAIF,EACA,yCAGAC,EACA,0DAGJE,QAAQC,IAAIF,GAGR,gCACI,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BJ,EAAKK,OAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BJ,EAAKM,U,IAiB5BC,E,4JAXX,WACI,OACI,8BACI,cAACC,EAAA,EAAD,CAAqBC,OAAQnB,EAA7B,SACI,cAACE,EAAD,Y,GALCkB,IAAMC,WClBZC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,MAEF,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,aAKRC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.1b78e859.chunk.js","sourcesContent":["//import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  // https://www.typescriptlang.org/docs/\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Hello World!\n        <img alt=\"\" className=\"my-avatar\" src=\"https://avatars.githubusercontent.com/alumarcu\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport './Header.css'\nimport Typography from '@material-ui/core/Typography'\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\n\nconst queryClient = new QueryClient()\n\nfunction GetGithubUser() {\n    const { isLoading, error, data } = useQuery('repoData', () =>\n        fetch('https://api.github.com/users/alumarcu').then(res =>\n            res.json()\n        )\n    )\n\n    if (isLoading) return (\n        <div>Wait..</div>\n    )\n\n    if (error) return (\n        <div>An error has occurred!</div>\n    )\n\n    console.log(data)\n\n    return (\n        <div>\n            <Typography variant=\"h3\">{data.name}</Typography>\n            <Typography variant=\"h5\">{data.bio}</Typography>\n        </div>\n    )\n}\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <QueryClientProvider client={queryClient}>\n                    <GetGithubUser />\n                </QueryClientProvider>\n            </div>\n        )\n    }\n}\n\nexport default Header\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './Header';\nimport reportWebVitals from './reportWebVitals';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container maxWidth=\"md\">\n      <Grid\n        container\n        spacing={1}\n      >\n        <Grid item xs={8}>\n          <Header />\n        </Grid>\n        <Grid item xs={4}>\n          <App />\n        </Grid>\n      </Grid>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}