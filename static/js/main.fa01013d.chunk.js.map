{"version":3,"sources":["App.tsx","Header.tsx","reportWebVitals.ts","images/icons/linkedin.svg","Menu.tsx","index.tsx"],"names":["App","className","alt","src","queryClient","QueryClient","API","GithubUser","result","useQuery","fetch","GITHUB_ME","then","res","json","isLoading","error","Typography","variant","data","name","bio","Header","QueryClientProvider","client","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SocialLinkItem","props","target","rel","href","icon","text","width","Menu","linkedin_icon","ReactDOM","render","StrictMode","Container","maxWidth","Grid","container","spacing","item","sm","xs","document","getElementById"],"mappings":"wQAmBeA,MAbf,WAGE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,yBAEE,qBAAKC,IAAI,GAAGD,UAAU,YAAYE,IAAI,yD,wECRxCC,EAAc,IAAIC,IAElBC,E,kCAIN,SAASC,IACL,IAAMC,EAASC,YAAS,WAAW,kBAC/BC,MAAMJ,EAAIK,WAAWC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,aAGzC,OAAIN,EAAOO,WAAaP,EAAOQ,MAAc,KAGzC,gCACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BV,EAAOW,KAAKC,OACtC,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BV,EAAOW,KAAKE,SAd5Cf,EACcK,UAAY,wC,IA8BjBW,E,4JAXX,WACI,OACI,8BACI,cAACC,EAAA,EAAD,CAAqBC,OAAQpB,EAA7B,SACI,cAACG,EAAD,Y,GALCkB,IAAMC,WCZZC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCTC,MAA0B,qC,MCsBzC,SAASO,EAAeC,GACpB,OACI,8BACI,oBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAMH,EAAMG,KAAzD,UACI,qBAAKpC,IAAKiC,EAAMI,KAAMtC,IAAKkC,EAAMK,KAAMC,MAAM,SAC7C,cAACzB,EAAA,EAAD,CAAYhB,UAAU,UAAtB,SAAiCmC,EAAMK,YAMxCE,M,4JArBX,WACI,OACI,8BACI,cAACR,EAAD,CAAgBK,KAAMI,EAAeH,KAAK,WAAWF,KAAK,gC,GAJvDd,IAAMC,WCDzBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAAC,EAAD,aAKRC,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.fa01013d.chunk.js","sourcesContent":["//import React from 'react';\n//import logo from './logo.svg';\n//import { ReactComponent as LinkedIn } from './images/icons/linkedin.svg'\nimport './App.css';\n\n\nfunction App() {\n  // https://www.typescriptlang.org/docs/\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Hello World!\n        <img alt=\"\" className=\"my-avatar\" src=\"https://avatars.githubusercontent.com/alumarcu\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport './Header.css'\nimport Typography from '@material-ui/core/Typography'\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\n\nconst queryClient = new QueryClient()\n\nclass API {\n    static readonly GITHUB_ME = 'https://api.github.com/users/alumarcu'\n}\n\nfunction GithubUser() {\n    const result = useQuery('gh_user', () =>\n        fetch(API.GITHUB_ME).then(res => res.json())\n    )\n\n    if (result.isLoading || result.error) return null\n\n    return (\n        <div>\n            <Typography variant=\"h3\">{result.data.name}</Typography>\n            <Typography variant=\"h5\">{result.data.bio}</Typography>\n        </div>\n    )\n}\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <QueryClientProvider client={queryClient}>\n                    <GithubUser />\n                </QueryClientProvider>\n            </div>\n        )\n    }\n}\n\nexport default Header\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/linkedin.fd9e4298.svg\";","import linkedin_icon from './images/icons/linkedin.svg'\nimport Typography from '@material-ui/core/Typography'\nimport React, { ReactNode } from 'react'\nimport './Menu.css'\n\ntype SocialLink = {\n    icon: string\n    href: string\n    text: string\n}\n\nclass Menu extends React.Component {\n    render(): ReactNode {\n        return (\n            <div>\n                <SocialLinkItem icon={linkedin_icon} text=\"LinkedIn\" href=\"http://www.google.com\" />\n            </div>\n        )\n        \n    }\n}\n\nfunction SocialLinkItem(props: SocialLink) {\n    return (\n        <div>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.href}>\n                <img src={props.icon} alt={props.text} width=\"48px\" />\n                <Typography className=\"my-link\">{props.text}</Typography>\n            </a>\n        </div>\n    )\n}\n\nexport default Menu\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './Header';\nimport reportWebVitals from './reportWebVitals';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Menu from './Menu';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container maxWidth=\"md\">\n      <Grid\n        container\n        spacing={1}\n      >\n        <Grid item sm={8} xs={12}>\n          <Header />\n          <Menu />\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <App />\n        </Grid>\n      </Grid>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}